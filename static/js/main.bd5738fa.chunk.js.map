{"version":3,"sources":["utilities/Position.js","utilities/Colors.js","utilities/Flex.js","Global.js","logo.png","layouts/Header.js","particles.gif","record.png","elements/Keys.js","utilities/Type.js","context/ScaleContext.js","audioApi/Oscillator.js","context/SynthContext.js","elements/KeyContainer.js","elements/Controls.js","elements/SequenceBlock.js","elements/SequenceRow.js","elements/SequenceContainer.js","elements/SequenceControls.js","App.js","reportWebVitals.js","index.js"],"names":["centerAbsolute","css","darkPurple","lightPurple","teal","darkGradient","FlexRow","styled","div","props","justify","FlexRowSequence","GlobalStyle","createGlobalStyle","AppHeader","header","Header","src","logo","alt","className","KeyButton","KeyText","span","Key","keyPressed","keyValue","note","handleMouseDown","handleMouseUp","findKey","find","key","onMouseDown","onMouseUp","major","scale","minor","push","cMaj","cMin","console","log","scales","ScaleContext","React","createContext","audioCtx","window","AudioContext","webkitAudioContext","sampleRate","Synth","Error","this","_context","_verb","createConvolver","biquadFilter","createBiquadFilter","_filterOn","_verbOn","compressor","DynamicsCompressorNode","threshold","setValueAtTime","currentTime","knee","ratio","attack","release","freq","type","frequency","value","gain","n","i","rate","seconds","decay","reverse","length","impulse","createBuffer","impulseL","getChannelData","impulseR","Math","random","pow","buffer","wave","reverb","filter","sustainTime","attackTime","releaseTime","notePlayed","notes","oscillator","createOscillator","time","gainNode","createGain","cancelScheduledValues","linearRampToValueAtTime","connect","disconnect","destination","start","stop","boolean","SynthContext","KeyContainer","octave","curScale","tempo","sustain","useState","setKey","useContext","synth","keyValues","a","s","d","f","g","h","j","k","handleKeyDown","e","repeat","currentNote","playNote","handleKeyUp","prev","keyClicked","target","dataset","keyval","useEffect","addEventListener","removeEventListener","OctaveButton","button","ControlContainer","flow","CustomSelect","select","Controls","increaseOctave","decreaseOctave","changeWave","updateAttack","updateRelease","changeScale","htmlFor","onClick","name","onChange","id","min","max","step","Block","dataActive","row","SequenceBlock","updateSequence","index","dataRow","Row","SequenceRow","sequence","seqBlocks","blocks","indexOf","genBlocks","ScaleDisplay","SequenceContainer","columns","cols","genGridColumns","ControlsButton","TempoInput","input","SequenceControls","isPlaying","togglePlaying","changeTempo","playSequence","toggleReverb","toggleFilter","setFreq","verbDecay","verbTime","setVerbTime","generateImpulse","nextVerbTime","parseFloat","style","position","fontSize","nextFreq","addFilter","setTimeout","BgGif","img","CornerImage","App","setAttack","setSustain","setRelease","setOctave","setWave","setCurScale","setTempo","setIsPlaying","intervalId","setIntervalId","setStep","setSequence","setReverb","setFilter","particles","clearInterval","nextAttackTime","updateSustain","nextTime","parseInt","block","newSeq","remove","splice","seqIndex","setInterval","verb","Global","record","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd5738fa.chunk.js","sourcesContent":["import { css } from 'styled-components';\n\n// CSS Helper\n// Needed for props in mixins\nexport const fixedTop = css`\n        position: fixed;\n        top: 0;\n        left: 0;\n`;\n\nexport const centerAbsolute = css`\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n`;\n","import { css } from 'styled-components';\n\nexport const black = '#0d0221';\nexport const veryDarkPurple = '#261447';\nexport const darkPurple = '#2e2157';\nexport const indigo = '#920075';\nexport const lightPurple = '#540d6e';\n\nexport const teal = '#2de2e6';\n\nexport const darkGradient = css`\n        background: no-repeat linear-gradient(to top, #ff4365 0%, #920075 10%, #0d0221 20%);\n        background-size: contain;\n`;\n","import styled from 'styled-components';\n\nexport const FlexRow = styled.div`\n        width: 80%;\n        margin: 0 auto;\n        display: flex;\n        flex-wrap: wrap;\n        row-gap: 1rem;\n        column-gap: 1rem;\n        justify-content: ${(props) => props.justify};\n        /* align-items: center; */\n        margin-bottom: 2rem;\n\n        @media (max-width: 1200px) {\n                width: 90%;\n        }\n`;\n\nexport const FlexRowSequence = styled.div`\n        width: 80%;\n        margin: 0 auto;\n        display: flex;\n        flex-wrap: wrap;\n        row-gap: 1rem;\n        justify-content: ${(props) => props.justify};\n        /* align-items: center; */\n        margin-bottom: 2rem;\n\n        @media (max-width: 1200px) {\n                width: 90%;\n        }\n`;\n\nexport const FlexCol = styled.div`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n`;\n","import { createGlobalStyle } from 'styled-components';\nimport { black, darkGradient, teal } from './utilities';\n\nconst GlobalStyle = createGlobalStyle`\n\nhtml {\n  min-height: 100%; \n  width: 100vw;\noverflow-x: hidden;\n  position: relative;\n}\n@media (max-width: 1200px) {\n             html {\n               font-size: 10px;\n             }\n            }\n\n            @media (max-width: 1200px) {\n             html {\n               font-size: 10px;\n             }\n            }\n    body {\n      ${darkGradient};\n      \n      height: 100%;\n\n      overflow-x: hidden;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    font-family: 'Audiowide', cursive;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n\n\n\n.App {\n  text-align: center;\n  position: relative;\n  \n}\n\n.on {\n  color: #2de2e6;\n  box-shadow: 0 0 15px #f6019d;\n  text-shadow: 0 0 15px #2de2e6;\n  background: #920075;\n  position: relative;\n\n  span {\n    color: #2de2e6;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n     border-radius:10px;\n     background: #f706cf;\n     transition: .2s;\n     z-index: -1;\n    transform: scale(1.1);\n    box-shadow: 0 0 15px #f706cf;\n    filter: blur(3px);\n  }\n}\n\n.toggled {\n  background-color: #791e94;\n \n                text-shadow: 0 0 15px #2de2e6;\n                color: ${teal};\n                box-shadow: 0 0 30px ${teal};\n                &:before {\n                        content: '';\n                       \n                        top: 0;\n                        left: 0;\n                        width: 100%;\n                        height: 100%;\n                        border-radius: 10px;\n                        background: ${teal};\n                        transition: 0.2s;\n                        box-shadow: 0 0 15px ${teal};\n                        filter: blur(3px);\n                        z-index: -1;\n                }\n        }\n\n\n\n}`;\n\nexport default GlobalStyle;\n","export default __webpack_public_path__ + \"static/media/logo.dbd5ff71.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../logo.png';\nimport { centerAbsolute } from '../utilities';\n\nconst Header = () => (\n        <AppHeader>\n                <img src={logo} alt=\"logo\" className=\"logo\" />\n        </AppHeader>\n);\n\nconst AppHeader = styled.header`\n        pointer-events: none;\n        width: 100%;\n        height: 140px;\n        position: relative;\n        .logo {\n                ${centerAbsolute};\n                top: 60%;\n        }\n        @media (max-width: 1200px) {\n                height: 100px;\n                .logo {\n                        ${centerAbsolute};\n                        top: 70%;\n                }\n        }\n`;\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/particles.718707aa.gif\";","export default __webpack_public_path__ + \"static/media/record.d32105fc.png\";","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { baseFont, darkPurple, indigo, lightPurple, teal } from '../utilities';\n\nconst KeyButton = styled.div`\n        cursor: pointer;\n        font-family: ${baseFont};\n        width: 100px;\n        height: 100px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: ${darkPurple};\n        border-radius: 5px;\n        transition: all 0.3s;\n        color: ${indigo};\n\n        &:hover {\n                background-color: ${lightPurple};\n                color: ${teal};\n        }\n\n        &::active {\n                background-color: white;\n        }\n\n        @media (max-width: 1200px) {\n                width: 80px;\n                height: 80px;\n        }\n\n        @media (max-width: 600px) {\n                width: 60px;\n                height: 60px;\n                font-size: 1rem;\n        }\n`;\n\nconst KeyText = styled.span`\n        pointer-events: none;\n        font-size: 3rem;\n        color: inherit;\n        -webkit-touch-callout: none; /* iOS Safari */\n        -webkit-user-select: none; /* Safari */\n        -khtml-user-select: none; /* Konqueror HTML */\n        -moz-user-select: none; /* Old versions of Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n        user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n        @media (max-width: 600px) {\n                font-size: 1.4rem;\n        }\n`;\n\nexport default function Key({ keyPressed, keyValue, note, handleMouseDown, handleMouseUp }) {\n        const findKey = keyPressed.find((key) => key === keyValue);\n\n        return (\n                <KeyButton\n                        className={findKey ? 'on' : ''}\n                        data-keyval={keyValue}\n                        onMouseDown={handleMouseDown}\n                        onMouseUp={handleMouseUp}\n                >\n                        <KeyText>{note}</KeyText>\n                </KeyButton>\n        );\n}\n","export const baseFont = `\n    font-family: 'Audiowide', cursive;\n`;\n","import React from 'react';\nimport scale from 'music-scale';\n\n// const rootNotes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n\nconst major = scale('1 2 3 4 5 6 7', 'C');\nconst minor = scale('1 2 2# 4 5 5# 6#', 'C');\n\nmajor.push('C');\nminor.push('C');\n\nconst cMaj = { ...major };\nconst cMin = { ...minor };\n\nconsole.log(cMin);\n\nconst scales = {\n        cMaj,\n        cMin,\n};\n\nconst ScaleContext = React.createContext(scales);\n\nexport default ScaleContext;\n","import notes from '../data/notes.json';\n\n// create web audio api context\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioCtx = new AudioContext({\n        sampleRate: 44100,\n});\n\n// const noteLength = 0.4;\n// const attackTime = 0.01;\n// const releaseTime = 0.1;\n\n// const verb = audioCtx.createConvolver();\n\nexport class Synth {\n        constructor() {\n                if (!audioCtx) {\n                        throw new Error('Browser does not support Web Audio API');\n                }\n\n                this._context = audioCtx;\n                this._verb = this._context.createConvolver();\n                this.biquadFilter = this._context.createBiquadFilter();\n\n                this._filterOn = false;\n                this._verbOn = false;\n\n                this.compressor = new DynamicsCompressorNode(this._context);\n                this.compressor.threshold.setValueAtTime(-50, audioCtx.currentTime);\n                this.compressor.knee.setValueAtTime(40, audioCtx.currentTime);\n                this.compressor.ratio.setValueAtTime(12, audioCtx.currentTime);\n                this.compressor.attack.setValueAtTime(0, audioCtx.currentTime);\n                this.compressor.release.setValueAtTime(0.25, audioCtx.currentTime);\n        }\n\n        addFilter(freq = 350, type = 'lowpass') {\n                this.biquadFilter.type = type;\n                this.biquadFilter.frequency.value = freq;\n                this.biquadFilter.gain.value = 25;\n        }\n\n        generateImpulse({ rate = 44100, seconds = 5, decay = 10, reverse = false } = {}) {\n                const length = rate * seconds;\n                const impulse = this._context.createBuffer(2, length, rate);\n                const impulseL = impulse.getChannelData(0);\n                const impulseR = impulse.getChannelData(1);\n                let n;\n                let i;\n\n                for (i = 0; i < length; i++) {\n                        n = reverse ? length - i : i;\n                        // eslint-disable-next-line\n            impulseL[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);\n                        // eslint-disable-next-line\n            impulseR[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);\n                }\n\n                this._verb.buffer = impulse;\n        }\n\n        playNote(\n                note,\n                wave = 'square',\n                { reverb = this._verbOn, filter = this._filterOn, sustainTime, attackTime, releaseTime } = {}\n        ) {\n                const notePlayed = notes[note];\n                const oscillator = this._context.createOscillator();\n                const time = this._context.currentTime;\n\n                // Handle timing for gain node to create the volume envelope of the oscillator output\n                const gainNode = this._context.createGain();\n\n                gainNode.gain.cancelScheduledValues(time);\n                gainNode.gain.setValueAtTime(0, time);\n\n                gainNode.gain.linearRampToValueAtTime(1, time + attackTime);\n\n                gainNode.gain.linearRampToValueAtTime(0, time + attackTime + sustainTime + releaseTime);\n\n                oscillator.type = wave;\n                oscillator.frequency.setValueAtTime(notePlayed, time); // value in hertz\n\n                // Connect oscillator to gain node to initialize its chain\n                oscillator.connect(gainNode);\n\n                if (reverb && filter) {\n                        // disconnects make sure the last connections are reset so the correct effect is heard based on the parameters\n                        this._verb.disconnect();\n                        this.biquadFilter.disconnect();\n                        // Order of effect connnections will alter how the ouput sounds\n                        gainNode.connect(this._verb);\n                        this._verb.connect(this.biquadFilter);\n                        this.biquadFilter.connect(this.compressor);\n                } else if (filter && !reverb) {\n                        this._verb.disconnect();\n                        gainNode.connect(this.biquadFilter);\n                        this.biquadFilter.connect(this.compressor);\n                } else if (reverb && !filter) {\n                        this.biquadFilter.disconnect();\n                        gainNode.connect(this._verb);\n                        this._verb.connect(this.compressor);\n                } else {\n                        gainNode.connect(this.compressor);\n                }\n\n                // Last connection is compressor to destination\n                this.compressor.connect(this._context.destination);\n\n                // Start and stop instance of the oscillator. The stop method handles removing the instance on its own\n                oscillator.start(time);\n                oscillator.stop(time + attackTime + sustainTime + releaseTime);\n        }\n\n        set reverb(boolean) {\n                this._verbOn = boolean;\n        }\n\n        set filter(boolean) {\n                this._filterOn = boolean;\n        }\n}\n","import React from 'react';\nimport { Synth } from '../audioApi';\n\nconst SynthContext = React.createContext(new Synth());\n\nexport default SynthContext;\n","import React, { useEffect, useState, useContext } from 'react';\nimport Key from './Keys';\nimport { FlexRow } from '../utilities';\n\nimport ScaleContext from '../context/ScaleContext';\nimport SynthContext from '../context/SynthContext';\n\nexport default function KeyContainer({ octave, wave, tempo, filter, curScale, attack, sustain, release, reverb }) {\n        const [key, setKey] = useState([]);\n        const scales = useContext(ScaleContext);\n        const synth = useContext(SynthContext);\n\n        const [keyValues, setKeyValues] = useState(['a', 's', 'd', 'f', 'g', 'h', 'j', 'k']);\n\n        const [notes, setNotes] = useState({\n                a: '0',\n                s: '1',\n                d: '2',\n                f: '3',\n                g: '4',\n                h: '5',\n                j: '6',\n                k: '7',\n        });\n\n        // This is doing the same thing as click should refactor\n        function handleKeyDown(e) {\n                if (!e.repeat) {\n                        if (notes[e.key]) {\n                                const currentNote = scales[curScale][`${notes[e.key]}`];\n                                if (notes[e.key] === '7') {\n                                        synth.playNote(`${currentNote}${octave + 1}`, wave, {\n                                                sustainTime: sustain,\n                                                attackTime: attack,\n                                                releaseTime: release,\n                                        });\n                                } else {\n                                        synth.playNote(`${currentNote}${octave}`, wave, {\n                                                sustainTime: sustain,\n                                                attackTime: attack,\n                                                releaseTime: release,\n                                        });\n                                }\n                        }\n\n                        setKey((key) => {\n                                if (key.length < 4) {\n                                        return [...key, e.key];\n                                }\n                                return [...key];\n                        });\n                }\n        }\n        function handleKeyUp(e) {\n                setKey((prev) => prev.filter((k) => k !== e.key));\n        }\n\n        function handleMouseDown(e) {\n                const keyClicked = e.target.dataset.keyval;\n                if (notes[keyClicked]) {\n                        const currentNote = scales[curScale][`${notes[keyClicked]}`];\n\n                        if (notes[keyClicked] === '7') {\n                                synth.playNote(`${currentNote}${octave + 1}`, wave, {\n                                        sustainTime: sustain,\n                                        attackTime: attack,\n                                        releaseTime: release,\n                                });\n                        } else {\n                                synth.playNote(`${currentNote}${octave}`, wave, {\n                                        sustainTime: sustain,\n                                        attackTime: attack,\n                                        releaseTime: release,\n                                });\n                        }\n\n                        setKey((key) => {\n                                if (key.length < 4) {\n                                        return [...key, keyClicked];\n                                }\n                                return [...key];\n                        });\n                }\n        }\n\n        function handleMouseUp(e) {\n                const keyClicked = e.target.dataset.keyval;\n                setKey((prev) => prev.filter((k) => k !== keyClicked));\n        }\n\n        useEffect(() => {}, [key]);\n\n        useEffect(() => {\n                window.addEventListener('keydown', handleKeyDown);\n                window.addEventListener('keyup', handleKeyUp);\n\n                return () => {\n                        window.removeEventListener('keydown', handleKeyDown);\n                        window.removeEventListener('keyup', handleKeyUp);\n                };\n        }, [octave, wave, attack, sustain, release, curScale]);\n\n        return (\n                <FlexRow justify=\"space-evenly\">\n                        <Key\n                                handleMouseDown={handleMouseDown}\n                                handleMouseUp={handleMouseUp}\n                                keyPressed={key}\n                                note={scales[curScale]['0']}\n                                keyValue={keyValues[0]}\n                        />\n                        <Key\n                                handleMouseDown={handleMouseDown}\n                                handleMouseUp={handleMouseUp}\n                                keyPressed={key}\n                                note={scales[curScale]['1']}\n                                keyValue={keyValues[1]}\n                        />\n                        <Key\n                                handleMouseDown={handleMouseDown}\n                                handleMouseUp={handleMouseUp}\n                                keyPressed={key}\n                                note={scales[curScale]['2']}\n                                keyValue={keyValues[2]}\n                        />\n                        <Key\n                                handleMouseDown={handleMouseDown}\n                                handleMouseUp={handleMouseUp}\n                                keyPressed={key}\n                                note={scales[curScale]['3']}\n                                keyValue={keyValues[3]}\n                        />\n                        <Key\n                                handleMouseDown={handleMouseDown}\n                                handleMouseUp={handleMouseUp}\n                                keyPressed={key}\n                                note={scales[curScale]['4']}\n                                keyValue={keyValues[4]}\n                        />\n                        <Key\n                                handleMouseDown={handleMouseDown}\n                                handleMouseUp={handleMouseUp}\n                                keyPressed={key}\n                                note={scales[curScale]['5']}\n                                keyValue={keyValues[5]}\n                        />\n                        <Key\n                                handleMouseDown={handleMouseDown}\n                                handleMouseUp={handleMouseUp}\n                                keyPressed={key}\n                                note={scales[curScale]['6']}\n                                keyValue={keyValues[6]}\n                        />\n                        <Key\n                                handleMouseDown={handleMouseDown}\n                                handleMouseUp={handleMouseUp}\n                                keyPressed={key}\n                                note={scales[curScale]['7']}\n                                keyValue={keyValues[7]}\n                        />\n                </FlexRow>\n        );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FlexRow, lightPurple, teal, veryDarkPurple } from '../utilities';\n\nconst OctaveButton = styled.button`\n        font-size: 1.5rem;\n        padding: 0.5rem 0.5rem;\n        margin-right: 1rem;\n        margin-left: 1rem;\n        background-color: #541388;\n        border: none;\n        border-radius: 2px;\n        cursor: pointer;\n\n        &:hover {\n                background-color: ${lightPurple};\n        }\n`;\nexport const ControlContainer = styled.div`\n        display: flex;\n\n        justify-content: space-between;\n        align-items: center;\n\n        ${({ flow }) => flow === 'column' && 'flex-direction: column'};\n\n        label {\n                color: ${teal};\n                font-size: 1.3rem;\n                text-align: center;\n                margin-right: 2rem;\n        }\n        div {\n                width: 100%;\n                max-width: 150px;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n                align-items: center;\n                position: relative;\n\n                input {\n                        width: 70%;\n                }\n\n                label {\n                        display: inline-block;\n                        margin-left: 2rem;\n                }\n\n                p {\n                        color: ${teal};\n                }\n        }\n        h3 {\n                color: ${teal};\n                font-size: 1rem;\n                text-align: center;\n                margin-bottom: 0;\n        }\n        h4 {\n                color: ${teal};\n                font-size: 1.2rem;\n                text-align: center;\n        }\n        h5 {\n                display: block;\n                color: ${teal};\n        }\n\n        .absolute {\n                position: absolute;\n                top: 40px;\n                left: 20px;\n        }\n`;\n\nconst CustomSelect = styled.select`\n        font-size: 1.5rem;\n        color: ${teal};\n        background-color: ${veryDarkPurple};\n        border-radius: 4px;\n        border: none;\n        margin-right: 1rem;\n`;\n\nexport default function Controls({\n        octave,\n        increaseOctave,\n        decreaseOctave,\n        wave,\n        changeWave,\n        attack,\n        updateAttack,\n\n        release,\n        updateRelease,\n        scale,\n        changeScale,\n}) {\n        return (\n                <FlexRow justify=\"space-evenly\">\n                        <ControlContainer>\n                                <label htmlFor=\"octave\">Octave</label>\n                                <OctaveButton onClick={decreaseOctave}>-</OctaveButton>\n                                <h4>{octave}</h4>\n                                <OctaveButton onClick={increaseOctave}>+</OctaveButton>\n                        </ControlContainer>\n                        <ControlContainer>\n                                <label htmlFor=\"scale\">Scale</label>\n                                <CustomSelect name=\"scale\" value={scale} onChange={changeScale}>\n                                        <option value=\"cMaj\">Cmaj</option>\n                                        <option value=\"cMin\">Cmin</option>\n                                </CustomSelect>\n                        </ControlContainer>\n                        <ControlContainer>\n                                <label htmlFor=\"wave\">Wave Form</label>\n                                <CustomSelect id=\"wave\" name=\"wave\" value={wave} onChange={changeWave}>\n                                        <option value=\"square\">Square</option>\n                                        <option value=\"sine\">Sine</option>\n                                        <option value=\"sawtooth\">Sawtooth</option>\n                                        <option value=\"triangle\">Triangle</option>\n                                </CustomSelect>\n                        </ControlContainer>\n                        <ControlContainer>\n                                <label htmlFor=\"envelope\">Envelope</label>\n                                <div>\n                                        <label htmlFor=\"attack\">Attack</label>\n                                        <input\n                                                type=\"range\"\n                                                name=\"attack\"\n                                                value={attack}\n                                                onChange={updateAttack}\n                                                min={0.01}\n                                                max={1}\n                                                step={0.01}\n                                        />\n                                </div>\n\n                                <div>\n                                        <label htmlFor=\"release\">Release</label>\n                                        <input\n                                                type=\"range\"\n                                                name=\"release\"\n                                                value={release}\n                                                onChange={updateRelease}\n                                                min={0.01}\n                                                max={2}\n                                                step={0.01}\n                                        />\n                                </div>\n                        </ControlContainer>\n                </FlexRow>\n        );\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { darkPurple, teal } from '../utilities';\n\nconst Block = styled.div`\n        height: 30px;\n        width: 30px;\n        background-color: ${darkPurple};\n        border-radius: 3px;\n        margin-bottom: 1rem;\n        position: relative;\n        @media (max-width: 1200px) {\n                width: 18px;\n                height: 18px;\n        }\n\n        @media (max-width: 320px) {\n                width: 15px;\n                height: 15px;\n        }\n\n        ${({ dataActive }) =>\n                dataActive === true &&\n                css`\n                        background-color: #791e94;\n                `}\n\n        ${({ step, row }) =>\n                step === row &&\n                css`\n                        background-color: #f6019d;\n                        box-shadow: 0 0 15px #d40078;\n                        &:before {\n                                content: '';\n                                position: absolute;\n                                top: 0;\n                                left: 0;\n                                width: 100%;\n                                height: 100%;\n                                border-radius: 10px;\n                                background: #d40078;\n                                transition: 0.2s;\n                                box-shadow: 0 0 15px #d40078;\n                                filter: blur(3px);\n                                z-index: -1;\n                        }\n                        /* background-color: #d40078; */\n                `}\n\n    ${({ step, row, dataActive }) => {\n                if (step === row && dataActive === true) {\n                        return css`\n                                background-color: ${teal};\n                                box-shadow: 0 0 30px ${teal};\n                                &:before {\n                                        content: '';\n                                        position: absolute;\n                                        top: 0;\n                                        left: 0;\n                                        width: 100%;\n                                        height: 100%;\n                                        border-radius: 10px;\n                                        background: ${teal};\n                                        transition: 0.2s;\n                                        box-shadow: 0 0 15px ${teal};\n                                        filter: blur(3px);\n                                        z-index: -1;\n                                }\n                        `;\n                }\n        }}\n`;\n\nexport default function SequenceBlock({ dataActive, updateSequence, index, dataRow, step }) {\n        return (\n                <Block\n                        onClick={updateSequence}\n                        dataActive={dataActive}\n                        data-index={index}\n                        data-row={dataRow}\n                        row={dataRow}\n                        step={step}\n                />\n        );\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { indigo, teal } from '../utilities';\nimport SequenceBlock from './SequenceBlock';\n\nconst Row = styled.div`\n        display: flex;\n        flex-direction: column-reverse;\n        color: ${teal};\n        background-color: transparent;\n        border-radius: 100px;\n        transition: all 0.05s;\n        position: relative;\n\n        span {\n                margin-bottom: 0.5rem;\n        }\n`;\n\nexport default function SequenceRow({ index, sequence, updateSequence, step }) {\n        function genBlocks() {\n                const blocks = [];\n                for (let i = 0; i < 8; i++) {\n                        if (sequence.indexOf(i) !== -1) {\n                                blocks.push(\n                                        <SequenceBlock\n                                                key={i}\n                                                index={i}\n                                                dataRow={index}\n                                                dataActive\n                                                updateSequence={updateSequence}\n                                                step={step}\n                                        />\n                                );\n                        } else {\n                                blocks.push(\n                                        <SequenceBlock\n                                                key={i}\n                                                index={i}\n                                                dataRow={index}\n                                                dataActive={false}\n                                                updateSequence={updateSequence}\n                                                step={step}\n                                        />\n                                );\n                        }\n                }\n                return blocks;\n        }\n\n        const seqBlocks = genBlocks();\n\n        return (\n                <Row step={step} index={index}>\n                        <span>{index + 1}</span>\n                        {seqBlocks}\n                </Row>\n        );\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { FlexRow, FlexRowSequence, teal } from '../utilities';\nimport SequenceRow from './SequenceRow';\n\nconst ScaleDisplay = styled.div`\n        display: flex;\n        flex-direction: column-reverse;\n        justify-content: space-between;\n        position: absolute;\n        left: 10%;\n        margin-top: 0.3rem;\n        height: 344px;\n        color: ${teal};\n\n        h4 {\n                margin: 0;\n        }\n\n        @media (max-width: 1200px) {\n                left: 5px;\n                font-size: 0.7rem;\n                height: 208px;\n        }\n\n        @media (max-width: 320px) {\n                height: 185px;\n        }\n`;\n\nexport default function SequenceContainer({ sequence, updateSequence, scale, step }) {\n        function genGridColumns() {\n                const cols = [];\n                if (sequence) {\n                        for (let i = 0; i < 16; i++) {\n                                cols.push(\n                                        <SequenceRow\n                                                key={i}\n                                                index={i}\n                                                sequence={sequence[i]}\n                                                updateSequence={updateSequence}\n                                                step={step}\n                                        />\n                                );\n                        }\n                }\n                return cols;\n        }\n\n        const columns = genGridColumns();\n\n        return (\n                <FlexRowSequence justify=\"space-evenly\">\n                        <ScaleDisplay>\n                                <h4>{scale[0]}</h4>\n                                <h4>{scale[1]}</h4>\n                                <h4>{scale[2]}</h4>\n                                <h4>{scale[3]}</h4>\n                                <h4>{scale[4]}</h4>\n                                <h4>{scale[5]}</h4>\n                                <h4>{scale[6]}</h4>\n                                <h4>{scale[7]}</h4>\n                        </ScaleDisplay>\n                        {columns}\n                </FlexRowSequence>\n        );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SynthContext from '../context/SynthContext';\nimport { FlexRow, teal } from '../utilities';\nimport { ControlContainer } from './Controls';\n\nconst ControlsButton = styled.button`\n        cursor: pointer;\n        color: black;\n        background-color: #540d6e;\n        border: none;\n        padding: 10px 15px;\n        font-size: 1.4rem;\n        border-radius: 4px;\n        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.5);\n\n        transition: all 0.3s;\n\n        @media (max-width: 1200px) {\n                padding: 3px;\n        }\n`;\n\nconst TempoInput = styled.input`\n        font-family: inherit;\n        text-align: center;\n        border: none;\n        border-radius: 4px;\n        padding: 10px;\n\n        @media (max-width: 1200px) {\n                padding: 3px;\n        }\n`;\n\nexport default function SequenceControls({\n        isPlaying,\n        togglePlaying,\n        tempo,\n        changeTempo,\n        playSequence,\n        reverb,\n        toggleReverb,\n        filter,\n        toggleFilter,\n}) {\n        const [freq, setFreq] = useState(400);\n        const synth = useContext(SynthContext);\n\n        const [verbDecay, setVerbDecay] = useState(10);\n        const [verbTime, setVerbTime] = useState(5);\n\n        function updateFreq(e) {\n                const nextFreq = parseFloat(e.target.value);\n\n                setFreq(nextFreq);\n                synth.addFilter(freq);\n        }\n\n        // function updateVerbDecay(e) {\n        //         const nextDecayTime = parseFloat(e.target.value);\n\n        //         setVerbDecay(nextDecayTime);\n        // }\n\n        function updateVerbTime(e) {\n                const nextVerbTime = parseFloat(e.target.value);\n\n                setVerbTime(nextVerbTime);\n                synth.generateImpulse({ seconds: verbTime });\n        }\n\n        useEffect(() => {\n                synth.generateImpulse({ seconds: verbTime, decay: verbDecay });\n                synth.reverb = reverb;\n                synth.filter = filter;\n        }, [reverb, filter]);\n\n        return (\n                <FlexRow justify=\"space-evenly\">\n                        <ControlContainer>\n                                <label htmlFor=\"tempo\">Tempo</label>\n                                <TempoInput type=\"number\" value={tempo} onChange={changeTempo} />\n                        </ControlContainer>\n                        <ControlContainer>\n                                <label htmlFor=\"reverb\">Reverb</label>\n                                <div>\n                                        <ControlsButton className={reverb ? 'toggled' : ''} onClick={toggleReverb}>\n                                                {reverb ? 'On' : 'Off'}\n                                        </ControlsButton>\n                                </div>\n                                <div>\n                                        <label htmlFor=\"time\">Time</label>\n                                        <input\n                                                type=\"range\"\n                                                name=\"time\"\n                                                value={verbTime}\n                                                onChange={updateVerbTime}\n                                                min={0.5}\n                                                max={10}\n                                                step={0.01}\n                                        />\n                                </div>\n                        </ControlContainer>\n                        <ControlContainer>\n                                <label htmlFor=\"filter\">Filter</label>\n                                <div>\n                                        <ControlsButton className={filter ? 'toggled' : ''} onClick={toggleFilter}>\n                                                {filter ? 'On' : 'Off'}\n                                        </ControlsButton>\n                                </div>\n                                <div style={{ position: 'relative' }}>\n                                        <h3>Frequency</h3>\n                                        <label style={{ fontSize: '1rem', position: 'absolute' }} htmlFor=\"time\">\n                                                {freq}\n                                        </label>\n                                        <input\n                                                type=\"range\"\n                                                name=\"time\"\n                                                value={freq}\n                                                onChange={updateFreq}\n                                                min={50}\n                                                max={10000}\n                                                step={1}\n                                        />\n                                </div>\n                        </ControlContainer>\n                        <ControlContainer>\n                                <ControlsButton\n                                        className={isPlaying ? 'toggled' : ''}\n                                        onClick={() => {\n                                                togglePlaying();\n                                                setTimeout(() => {\n                                                        playSequence();\n                                                }, 0);\n                                        }}\n                                >\n                                        {isPlaying ? 'Stop' : 'Play'}\n                                </ControlsButton>\n                        </ControlContainer>\n                </FlexRow>\n        );\n}\n","import styled from 'styled-components';\nimport { useContext, useEffect, useState } from 'react';\nimport GlobalStyle from './Global';\nimport Header from './layouts/Header';\nimport particles from './particles.gif';\nimport record from './record.png';\nimport KeyContainer from './elements/KeyContainer';\nimport ScaleContext from './context/ScaleContext';\nimport Controls from './elements/Controls';\nimport SequenceContainer from './elements/SequenceContainer';\nimport SequenceControls from './elements/SequenceControls';\n\nimport SynthContext from './context/SynthContext';\n\nconst BgGif = styled.img`\n        position: fixed;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        opacity: 0.3;\n        background-color: teal;\n        filter: hue-rotate(90deg);\n        z-index: -1;\n        @media (max-width: 1200px) {\n                display: none;\n        }\n`;\n\nconst CornerImage = styled.img`\n        width: 100px;\n        position: fixed;\n        bottom: 10px;\n        right: 10px;\n\n        @media (max-width: 1200px) {\n                display: none;\n        }\n`;\n\nfunction App() {\n        // Synth envelope values\n        const [attack, setAttack] = useState(0.01);\n        const [sustain, setSustain] = useState(0.1);\n        const [release, setRelease] = useState(0.03);\n        const synth = useContext(SynthContext);\n\n        // Scale and bse synth settings\n        const [octave, setOctave] = useState(4);\n        const [wave, setWave] = useState('square');\n        const scales = useContext(ScaleContext);\n        const [curScale, setCurScale] = useState('cMin');\n\n        function changeScale(e) {\n                setCurScale(e.target.value);\n        }\n\n        // Step sequencer state\n        const [tempo, setTempo] = useState(120);\n        const [isPlaying, setIsPlaying] = useState(false);\n        const [intervalId, setIntervalId] = useState(null);\n\n        const [step, setStep] = useState(null);\n        const [sequence, setSequence] = useState([\n                [0],\n                [2],\n                [4],\n                [5],\n                [0],\n                [2],\n                [4],\n                [5],\n                [0],\n                [2],\n                [4],\n                [5],\n                [0],\n                [2],\n                [4],\n                [7],\n        ]);\n\n        // Reverb settings values\n        const [reverb, setReverb] = useState(false);\n\n        // filter\n        const [filter, setFilter] = useState(false);\n\n        function toggleFilter() {\n                setFilter((filter) => !filter);\n        }\n\n        function increaseOctave() {\n                if (octave < 6) {\n                        setOctave(octave + 1);\n                }\n        }\n        function decreaseOctave() {\n                if (octave > 0) {\n                        setOctave(octave - 1);\n                }\n        }\n\n        function changeWave(e) {\n                setWave(e.target.value);\n                if (isPlaying) {\n                        setIsPlaying((isPlaying) => !isPlaying);\n                }\n                clearInterval(intervalId);\n        }\n\n        function changeTempo(e) {\n                setTempo(e.target.value);\n        }\n\n        function togglePlaying() {\n                setStep(null);\n                setIsPlaying((isPlaying) => !isPlaying);\n                clearInterval(intervalId);\n        }\n\n        function updateSequence(e) {\n                const row = parseInt(e.target.dataset.row);\n                const block = parseInt(e.target.dataset.index);\n                const newSeq = [...sequence];\n                // If index is in sequenc already remove it otherwise add it to the sequence for that row\n                if (newSeq[row].indexOf(block) === -1) {\n                        newSeq[row].push(block);\n                } else {\n                        const remove = newSeq[row].indexOf(block);\n                        newSeq[row].splice(remove, 1);\n                }\n                setSequence(newSeq);\n        }\n\n        function playSequence() {\n                if (!isPlaying) {\n                        const secondsPerBeat = 30.0 / tempo;\n                        let seqIndex = 0;\n                        setIntervalId(\n                                setInterval(() => {\n                                        for (let i = 0; i < sequence[seqIndex].length; i++) {\n                                                setStep(seqIndex);\n                                                const note = scales[curScale][sequence[seqIndex][i]];\n\n                                                if (sequence[seqIndex][i] === 7) {\n                                                        synth.playNote(`${note}${octave + 1}`, wave, {\n                                                                sustainTime: sustain,\n                                                                attackTime: attack,\n                                                                releaseTime: release,\n                                                        });\n                                                } else {\n                                                        synth.playNote(`${note}${octave}`, wave, {\n                                                                sustainTime: sustain,\n                                                                attackTime: attack,\n                                                                releaseTime: release,\n                                                        });\n                                                }\n                                        }\n                                        if (seqIndex < 15) {\n                                                seqIndex++;\n                                        } else {\n                                                seqIndex = 0;\n                                        }\n                                }, secondsPerBeat * 1000)\n                        );\n                }\n        }\n\n        function updateAttack(e) {\n                const nextAttackTime = parseFloat(e.target.value);\n\n                setAttack(nextAttackTime);\n        }\n        function updateSustain(e) {\n                const nextTime = parseFloat(e.target.value);\n                setSustain(nextTime);\n        }\n\n        function updateRelease(e) {\n                const nextTime = parseFloat(e.target.value);\n                setRelease(nextTime);\n        }\n\n        function toggleReverb() {\n                setReverb((verb) => !verb);\n        }\n\n        useEffect(() => {}, [curScale, setCurScale]);\n\n        return (\n                <div className=\"App\">\n                        <BgGif src={particles} />\n                        <Header />\n                        <Controls\n                                octave={octave}\n                                increaseOctave={increaseOctave}\n                                decreaseOctave={decreaseOctave}\n                                wave={wave}\n                                changeWave={changeWave}\n                                attack={attack}\n                                updateAttack={updateAttack}\n                                sustain={sustain}\n                                updateSustain={updateSustain}\n                                release={release}\n                                updateRelease={updateRelease}\n                                scale={curScale}\n                                changeScale={changeScale}\n                        />\n                        <KeyContainer\n                                wave={wave}\n                                octave={octave}\n                                tempo={tempo}\n                                sequence={sequence}\n                                curScale={curScale}\n                                attack={attack}\n                                sustain={sustain}\n                                release={release}\n                                reverb={reverb}\n                                filter={filter}\n                        />\n                        <SequenceContainer\n                                sequence={sequence}\n                                updateSequence={updateSequence}\n                                scale={scales[curScale]}\n                                step={step}\n                                reverb={reverb}\n                        />\n                        <SequenceControls\n                                tempo={tempo}\n                                changeTempo={changeTempo}\n                                isPlaying={isPlaying}\n                                togglePlaying={togglePlaying}\n                                playSequence={playSequence}\n                                reverb={reverb}\n                                toggleReverb={toggleReverb}\n                                filter={filter}\n                                toggleFilter={toggleFilter}\n                        />\n                        <GlobalStyle />\n                        <CornerImage src={record} />\n                </div>\n        );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n        if (onPerfEntry && onPerfEntry instanceof Function) {\n                import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                        getCLS(onPerfEntry);\n                        getFID(onPerfEntry);\n                        getFCP(onPerfEntry);\n                        getLCP(onPerfEntry);\n                        getTTFB(onPerfEntry);\n                });\n        }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n        <React.StrictMode>\n                <App />\n        </React.StrictMode>,\n        document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}